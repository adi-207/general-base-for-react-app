{"ast":null,"code":"import _ from 'lodash';\n\nconst {\n  CREATE_STREAM,\n  FETCH_STREAM,\n  FETCH_STREAMS,\n  EDIT_STREAM,\n  DELETE_STREAM\n} = require(\"../Actions/types\");\n\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAMS:\n      return { ...state,\n        ..._.mapKeys(action.payload, 'id')\n      };\n\n    case FETCH_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/adarsh/React-course/streams/client/src/reducers/streamReducer.js"],"names":["_","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","EDIT_STREAM","DELETE_STREAM","require","state","action","type","mapKeys","payload","id","omit"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;;AACA,MAAM;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,YAAjB;AAA+BC,EAAAA,aAA/B;AAA8CC,EAAAA,WAA9C;AAA2DC,EAAAA;AAA3D,IAA6EC,OAAO,CAAC,kBAAD,CAA1F;;AAEA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAyB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,aAAL;AACI,aAAO,EAAE,GAAGI,KAAL;AAAY,WAAGP,CAAC,CAACU,OAAF,CAAUF,MAAM,CAACG,OAAjB,EAA0B,IAA1B;AAAf,OAAP;;AACJ,SAAKT,YAAL;AACI,aAAO,EAAE,GAAGK,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACJ,SAAKV,aAAL;AACI,aAAO,EAAE,GAAGM,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACJ,SAAKP,WAAL;AACI,aAAO,EAAE,GAAGG,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACJ,SAAKN,aAAL;AACI,aAAOL,CAAC,CAACa,IAAF,CAAON,KAAP,EAAcC,MAAM,CAACG,OAArB,CAAP;;AACJ;AACI,aAAOJ,KAAP;AAZR;AAcH,CAfD","sourcesContent":["import _ from 'lodash'\nconst { CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, EDIT_STREAM, DELETE_STREAM } = require(\"../Actions/types\");\n\nexport default (state = {}, action ) => {\n    switch (action.type) {\n        case FETCH_STREAMS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') }\n        case FETCH_STREAM: \n            return { ...state, [action.payload.id]: action.payload }\n        case CREATE_STREAM:\n            return { ...state, [action.payload.id]: action.payload }\n        case EDIT_STREAM:\n            return { ...state, [action.payload.id]: action.payload }\n        case DELETE_STREAM:\n            return _.omit(state, action.payload)\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}