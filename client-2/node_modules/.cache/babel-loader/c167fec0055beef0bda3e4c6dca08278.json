{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/adarsh/React-course/streams/client/src/component/streams/StreamEdit.js\";\nimport { fromPairs } from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../Actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit a Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StreamForm, {\n        initialValues: this.props.stream,\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["/home/adarsh/React-course/streams/client/src/component/streams/StreamEdit.js"],"names":["fromPairs","React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","console","log","componentDidMount","props","match","params","id","render","stream","mapStateToProps","state","ownProps","streams"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAA0C;AAAA;AAAA;;AAAA,SAMtCC,QANsC,GAM1BC,UAAD,IAAgB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH,KARqC;AAAA;;AAEtCG,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWV,WAAX,CAAuB,KAAKU,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAMDC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAwB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,aAAa,EAAE,KAAKL,KAAL,CAAWK,MAAtC;AAA8C,QAAA,QAAQ,EAAE,KAAKV;AAA7D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AArBqC;;AAwB1C,MAAMW,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAEzC,SAAO;AAAEH,IAAAA,MAAM,EAAEE,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAHD;;AAMA,eAAed,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAwDE,UAAxD,CAAf","sourcesContent":["import { fromPairs } from 'lodash'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchStream, editStream } from '../../Actions'\nimport StreamForm from './StreamForm' \n\nclass StreamEdit extends React.Component  {\n\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id)\n    }\n\n    onSubmit = (formValues) => {\n        console.log(formValues)\n    }\n\n    render() {\n        if (!this.props.stream) {\n            return <div>Loading...</div>\n        }   \n\n        return (\n            <div>\n                <h3>Edit a Stream</h3>\n                <StreamForm initialValues={this.props.stream} onSubmit={this.onSubmit} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    \n    return { stream: state.streams[ownProps.match.params.id] }\n}\n\n\nexport default connect(mapStateToProps, { fetchStream, editStream  } )(StreamEdit)"]},"metadata":{},"sourceType":"module"}